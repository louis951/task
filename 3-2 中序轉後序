#include <iostream>
using namespace std;
class Stack {
public:
	static const int capacity = 20;
	char array[capacity] = {};
	int top = -1;
	Stack() {

	};
	void Push(int x) {
		array[++top] = x;
	};
	char Pop() {
		return array[top--];
	}
	void PrintStack() {
		for (int i = top; i >= 0; i--)
			cout << array[top--] << " ";
	}
};
int Priority(char op) {
	switch (op) {
	case '*':case '/':
		return 2;
		break;
	case '+':case '-':
		return 1;
		break;
	default:
		return 0;
		break;
	}
}
void InfixToPostfix(char infix[]) {
	char stack[20] = {};
	int i, top;
	for (i = 0, top = 0; infix[i] != '\0'; i++) {
		switch (infix[i]) {
		case '(':
			stack[++top] = infix[i];
			break;
		case '*':case '/':case '+':case '-':
			while (Priority(stack[top]) >= Priority(infix[i]))
				cout << stack[top--];
			stack[++top] = infix[i];
			break;
		case ')':
			while(stack[top] != '(')
				cout << stack[top--];
			top--;
			break;
		default:
			cout << infix[i];
			break;
		}
	}
	while (top > 0)
		cout << stack[top--];
}
int main(int argc, char *argv[])
{
	char itemset[20];
	cin.getline(itemset, 20);
	InfixToPostfix(itemset);
}
